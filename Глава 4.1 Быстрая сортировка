# Быстрая сортировка относится к алгоритмам сортировки. Она работает намного быстрее сортировки выбором и часто применяется в реальных программах. 
# Например, в стандартную библиотеку C входит функция с именем qsort, реализующая быструю сортировку. 
# Быстрая сортировка также основана на стратегии «разделяй и властвуй».
# Пустые массивы и массивы, содержащие всего один элемент можно просто возвращать в исходном виде — сортировать ничего не нужно:

# Программный код быстрой сортировки:
def quicksort(array):
    # Базовый случай: массивы с 0 и 1 элементом уже "отсортированы"
    if len(array) < 2:
        return array
    # Рекурсивный случай    
    else:
        pivot = array[0] 
        # Подмассив всех элементов, меньше опорного
        less = [i for i in array[1:] if i <= pivot]
        # Подмассив всех элементов, больше опорного
        greater = [i for i in array[1:] if i > pivot]
        return quicksort(less) + [pivot] + quicksort(greater)
print (quicksort([10, 5, 2, 3]))

# Алгоритм быстрой сортировки уникален тем, что его скорость зависит от выбора опорного элемента. 