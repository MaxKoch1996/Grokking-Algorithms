Массивы и связанные списки
    Иногда в памяти требуется сохранить список элементов. 
    Предположим, вы пишете приложение для управления текущими делами. Описания задач должны храниться в виде списка в памяти.    
    Что использовать — массив или связанный список? Для начала попробуем сохранить задачи в массиве, потому что этот способ более понятен. 
    При использовании массива все задачи хранятся в памяти непрерывно (то есть рядом друг с другом).

Связанные списки
    При использовании связанного списка элементы могут размещаться где угодно в памяти.
    В каждом элементе хранится адрес следующего элемента списка. Таким
    образом, набор произвольных адресов памяти объединяется в цепочку.

    В связанном списке элементы не хранятся рядом друг с другом, поэтому мгновенно определить
    позицию i-го элемента в памяти невозможно — нужно обратиться к перво-
    му элементу, чтобы получить адрес второго элемента, затем обратиться ко
    второму элементу для получения адреса третьего — и так далее, пока вы не
    доберетесь до i-го.

    Списки лучше подходят для вставки элементов в середину.

Удаление
    Что, если вы захотите удалить элемент? И снова список лучше подходит
    для этой операции, потому что в нем достаточно изменить указатель в пре-
    дыдущем элементе. В массиве при удалении элемента все последующие
    элементы нужно будет сдвинуть вверх.
    В отличие от вставки удаление возможно всегда. Попытка вставки может
    быть неудачной, если в памяти не осталось свободного места. С удалением
    подобных проблем не бывает.
