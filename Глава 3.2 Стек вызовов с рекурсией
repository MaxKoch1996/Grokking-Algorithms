def fact(x):
    if x == 1:
        return 1
    else:
        return x * fact(x-1)

#Стоит напомнить, что верхний блок в стеке сообщает, какой вызов fact является текущим.

# Стек удобен, но у него есть своя цена: сохранение всей промежуточной информации может привести к значительным затратам памяти. Каждый вызов функции занимает не много памяти, 
# но если стек станет слишком высоким, это будет означать, что ваш компьютер сохраняет информацию по очень многим вызовам. На этой стадии есть два варианта:
    # Переписать код с использованием цикла.
    # Иногда можно воспользоваться так называемой хвостовой рекурсией. Это непростая тема, которая выходит за рамки книги. Вдобавок она поддерживается далеко не во всех языках.


    #Шпаргалка
# Когда функция вызывает саму себя, это называется рекурсией.
# В каждой рекурсивной функции должно быть два случая: базовый и рекурсивный.
# Стек поддерживает две операции: занесение и извлечение элементов.
# Все вызовы функций сохраняются в стеке вызовов.
# Если стек вызовов станет очень большим, он займет слишком много памяти.